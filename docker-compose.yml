version: "3.9"

volumes:
  pgdata:

x-base: &base
  build:
    context: .
    dockerfile: Dockerfile
  environment:
    - TG_TOKEN=${TG_TOKEN}
    - TG_CHAT_ID=${TG_CHAT_ID}
    - POSTGRES_HOST=${POSTGRES_HOST:-database}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-bot}

services:
  parser:
    <<: *base
    profiles: [app]
    command: sh -c "alembic upgrade head && cd src && python scheduler.py"
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped

  bot:
    <<: *base
    profiles: [bot]
    command: sh -c "python bot.py"

  nginx:
    image: nginx:1-alpine
    volumes:
      - ./src/frontend/static:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  database:
    image: postgres:latest
    environment:
      - POSTGRES_DB=bot
      - POSTGRES_USER=bot
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-bot}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bot"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
